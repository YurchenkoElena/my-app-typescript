{"ast":null,"code":"var _jsxFileName = \"/var/www/html/my-app-typescript/src/pages/TodosPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { TodoList } from \"../components/TodoList\";\nimport { TodoForm } from \"../components/TodoForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TodosPage = () => {\n  _s();\n\n  const [todos, setTodos] = React.useState([]);\n  React.useEffect(() => {\n    const saved = JSON.parse(localStorage.getItem('todos') || '[]');\n    setTodos(saved);\n  }, []);\n  React.useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  const addHandler = title => {\n    const newTodo = {\n      title: title,\n      id: Date.now(),\n      completed: false\n    };\n    setTodos(prev => [newTodo, ...prev]); //setTodos([newTodo, ...todos])\n  };\n\n  const toggleHandler = id => {\n    setTodos(todos.map(todo => {\n      if (todo.id === id) {\n        console.log(todo);\n        todo.completed = !todo.completed;\n      }\n\n      return todo;\n    }));\n  };\n\n  const removeHandler = id => {\n    // eslint-disable-next-line no-restricted-globals\n    const shouldRemove = confirm('Вы уверены, что хотите удалить задачу?');\n\n    if (shouldRemove) {\n      setTodos(prev => prev.filter(todo => todo.id !== id));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoForm, {\n      onAdd: addHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      onToggle: toggleHandler,\n      onRemove: removeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TodosPage, \"JPZTns5sUK6f8sNf0ff2EvpSbn0=\");\n\n_c = TodosPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodosPage\");","map":{"version":3,"sources":["/var/www/html/my-app-typescript/src/pages/TodosPage.tsx"],"names":["React","TodoList","TodoForm","TodosPage","todos","setTodos","useState","useEffect","saved","JSON","parse","localStorage","getItem","setItem","stringify","addHandler","title","newTodo","id","Date","now","completed","prev","toggleHandler","map","todo","console","log","removeHandler","shouldRemove","confirm","filter"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,wBAAvB;AACA,SAAQC,QAAR,QAAuB,wBAAvB;;;AAKA,OAAO,MAAMC,SAAmB,GAAG,MAAM;AAAA;;AACrC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,KAAK,CAACM,QAAN,CAA4B,EAA5B,CAA1B;AAEAN,EAAAA,KAAK,CAACO,SAAN,CAAgB,MAAM;AAClB,UAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,IAA5C,CAAd;AACAP,IAAAA,QAAQ,CAACG,KAAD,CAAR;AACH,GAHD,EAGG,EAHH;AAKAR,EAAAA,KAAK,CAACO,SAAN,CAAgB,MAAM;AAClBI,IAAAA,YAAY,CAACE,OAAb,CAAqB,OAArB,EAA+BJ,IAAI,CAACK,SAAL,CAAeV,KAAf,CAA/B;AACH,GAFD,EAEG,CAACA,KAAD,CAFH;;AAIA,QAAMW,UAAU,GAAIC,KAAD,IAAmB;AAClC,UAAMC,OAAkB,GAAG;AACvBD,MAAAA,KAAK,EAAEA,KADgB;AAEvBE,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EAFmB;AAGvBC,MAAAA,SAAS,EAAE;AAHY,KAA3B;AAKAhB,IAAAA,QAAQ,CAACiB,IAAI,IAAI,CAACL,OAAD,EAAU,GAAGK,IAAb,CAAT,CAAR,CANkC,CAOlC;AACH,GARD;;AAUA,QAAMC,aAAa,GAAIL,EAAD,IAAgB;AAClCb,IAAAA,QAAQ,CAACD,KAAK,CAACoB,GAAN,CAAUC,IAAI,IAAI;AACvB,UAAGA,IAAI,CAACP,EAAL,KAAYA,EAAf,EAAmB;AACfQ,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAA,QAAAA,IAAI,CAACJ,SAAL,GAAiB,CAACI,IAAI,CAACJ,SAAvB;AACH;;AACD,aAAOI,IAAP;AACH,KANQ,CAAD,CAAR;AAOH,GARD;;AAUA,QAAMG,aAAa,GAAIV,EAAD,IAAgB;AAClC;AACA,UAAMW,YAAY,GAAGC,OAAO,CAAC,wCAAD,CAA5B;;AACA,QAAGD,YAAH,EAAiB;AACbxB,MAAAA,QAAQ,CAACiB,IAAI,IAAIA,IAAI,CAACS,MAAL,CAAYN,IAAI,IAAIA,IAAI,CAACP,EAAL,KAAYA,EAAhC,CAAT,CAAR;AACH;AACJ,GAND;;AAQA,sBACI;AAAA,4BACI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEH;AAAjB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEX,KAAjB;AACU,MAAA,QAAQ,EAAEmB,aADpB;AAEU,MAAA,QAAQ,EAAEK;AAFpB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAUH,CAlDM;;GAAMzB,S;;KAAAA,S","sourcesContent":["import React from \"react\";\nimport {TodoList} from \"../components/TodoList\";\nimport {TodoForm} from \"../components/TodoForm\";\nimport {ITodoType} from \"../types/interfaces\";\n\ndeclare var confirm: (question: string) => boolean\n\nexport const TodosPage: React.FC = () => {\n    const [todos, setTodos] = React.useState<ITodoType[]>([]);\n\n    React.useEffect(() => {\n        const saved = JSON.parse(localStorage.getItem('todos') || '[]') as ITodoType[]\n        setTodos(saved)\n    }, [])\n\n    React.useEffect(() => {\n        localStorage.setItem('todos',  JSON.stringify(todos))\n    }, [todos])\n\n    const addHandler = (title: string) => {\n        const newTodo: ITodoType = {\n            title: title,\n            id: Date.now(),\n            completed: false\n        }\n        setTodos(prev => [newTodo, ...prev])\n        //setTodos([newTodo, ...todos])\n    }\n\n    const toggleHandler = (id: number) => {\n        setTodos(todos.map(todo => {\n            if(todo.id === id) {\n                console.log(todo)\n                todo.completed = !todo.completed\n            }\n            return todo\n        }))\n    }\n\n    const removeHandler = (id: number) => {\n        // eslint-disable-next-line no-restricted-globals\n        const shouldRemove = confirm('Вы уверены, что хотите удалить задачу?')\n        if(shouldRemove) {\n            setTodos(prev => prev.filter(todo => todo.id !== id))\n        }\n    }\n\n    return (\n        <>\n            <TodoForm onAdd={addHandler}/>\n            <TodoList todos={todos}\n                      onToggle={toggleHandler}\n                      onRemove={removeHandler}/>\n        </>\n\n\n    )\n}"]},"metadata":{},"sourceType":"module"}