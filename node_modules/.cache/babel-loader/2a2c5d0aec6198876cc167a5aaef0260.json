{"ast":null,"code":"var _jsxFileName = \"/var/www/html/my-app-typescript/src/components/TodoList.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoList = _ref => {\n  let {\n    todos,\n    onRemove,\n    onToggle\n  } = _ref;\n\n  if (todos.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"center\",\n      children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0434\\u0435\\u043B \\u043F\\u0443\\u0441\\u0442!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this);\n  }\n\n  const removeHandler = (event, id) => {\n    event.preventDefault();\n    onRemove(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: todos.map(todo => {\n      const classes = ['todo'];\n\n      if (todo.completed) {\n        classes.push('completed');\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: classes.join(' '),\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: todo.completed,\n            onChange: onToggle.bind(null, todo.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: todo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons red-text\",\n            onClick: event => removeHandler(event, todo.id),\n            children: \"content_cut\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/var/www/html/my-app-typescript/src/components/TodoList.tsx"],"names":["React","TodoList","todos","onRemove","onToggle","length","removeHandler","event","id","preventDefault","map","todo","classes","completed","push","join","bind","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AASA,OAAO,MAAMC,QAAiC,GAAG,QAAiC;AAAA,MAAhC;AAACC,IAAAA,KAAD;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,GAAgC;;AAC9E,MAAGF,KAAK,CAACG,MAAN,KAAiB,CAApB,EAAuB;AACnB,wBAAO;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,QAAMC,aAAa,GAAG,CAACC,KAAD,EAA0BC,EAA1B,KAAyC;AAC3DD,IAAAA,KAAK,CAACE,cAAN;AACAN,IAAAA,QAAQ,CAACK,EAAD,CAAR;AACH,GAHD;;AAKA,sBACI;AAAA,cACKN,KAAK,CAACQ,GAAN,CAAUC,IAAI,IAAI;AACf,YAAMC,OAAO,GAAG,CAAC,MAAD,CAAhB;;AACA,UAAGD,IAAI,CAACE,SAAR,EAAmB;AACfD,QAAAA,OAAO,CAACE,IAAR,CAAa,WAAb;AACH;;AAED,0BACI;AAAI,QAAA,SAAS,EAAEF,OAAO,CAACG,IAAR,CAAa,GAAb,CAAf;AAAA,+BACI;AAAA,kCACI;AAAO,YAAA,IAAI,EAAC,UAAZ;AACO,YAAA,OAAO,EAAEJ,IAAI,CAACE,SADrB;AAEO,YAAA,QAAQ,EAAET,QAAQ,CAACY,IAAT,CAAc,IAAd,EAAoBL,IAAI,CAACH,EAAzB;AAFjB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAA,sBAAOG,IAAI,CAACM;AAAZ;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAG,YAAA,SAAS,EAAC,yBAAb;AACG,YAAA,OAAO,EAAEV,KAAK,IAAID,aAAa,CAACC,KAAD,EAAQI,IAAI,CAACH,EAAb,CADlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,SAAuCG,IAAI,CAACH,EAA5C;AAAA;AAAA;AAAA;AAAA,cADJ;AAgBH,KAtBA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CArCM;KAAMP,Q","sourcesContent":["import React from \"react\";\nimport {ITodoType} from \"../types/interfaces\";\n\ntype TodoListProps = {\n    todos: ITodoType[]\n    onToggle(id: number): void\n    onRemove: (ig: number) => void\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({todos, onRemove, onToggle}) => {\n    if(todos.length === 0) {\n        return <h3 className=\"center\">Список дел пуст!</h3>\n    }\n\n    const removeHandler = (event: React.MouseEvent, id: number) => {\n        event.preventDefault()\n        onRemove(id)\n    }\n\n    return (\n        <ul>\n            {todos.map(todo => {\n                const classes = ['todo']\n                if(todo.completed) {\n                    classes.push('completed')\n                }\n\n                return (\n                    <li className={classes.join(' ')} key={todo.id}>\n                        <label>\n                            <input type=\"checkbox\"\n                                   checked={todo.completed}\n                                   onChange={onToggle.bind(null, todo.id)}\n                            />\n                            <span>{todo.title}</span>\n                            <i className=\"material-icons red-text\"\n                               onClick={event => removeHandler(event, todo.id)}\n                            >\n                                content_cut\n                            </i>\n                        </label>\n                    </li>\n                )\n            } )}\n        </ul>\n    )\n}"]},"metadata":{},"sourceType":"module"}